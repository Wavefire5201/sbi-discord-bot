import os

import discord
from discord.ext import commands
from google import genai
from utils import get_logger

logger = get_logger(__name__)
client = genai.Client(api_key=os.getenv("GEMINI_API_KEY"))


class AI(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @commands.slash_command(
        name="joke", description="Get a random joke generated by AI!"
    )
    async def joke(self, ctx: discord.ApplicationContext):
        try:
            await ctx.defer()
            response = await client.aio.models.generate_content(
                model="gemini-2.5-flash-lite-preview-06-17",
                contents="Tell me a random funny joke.",
            )
            await ctx.followup.send(str(response.text))
        except Exception as e:
            logger.error(f"Error in joke command: {e}")
            await ctx.followup.send(
                "Sorry, I couldn't generate a joke right now. Please try again later!"
            )

    @commands.slash_command(name="chat", description="Chat with AI")
    async def chat(self, ctx: discord.ApplicationContext, message: str):
        try:
            await ctx.defer()
            response = await client.aio.models.generate_content(
                model="gemini-2.5-flash-lite-preview-06-17",
                contents=f"{message}",
            )
            await ctx.followup.send(str(response.text))
        except Exception as e:
            logger.error(f"Error in chat command: {e}")
            await ctx.followup.send(
                "Sorry, I couldn't generate a response right now. Please try again later!"
            )


def setup(bot):
    bot.add_cog(AI(bot))
